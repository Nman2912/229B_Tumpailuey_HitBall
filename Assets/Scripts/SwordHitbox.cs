using UnityEngine;
using System.Collections;

public class SwordHitbox : MonoBehaviour
{
    [Header("Sword Settings")]
    public float reflectForce = 15f;
    public float attackWindow = 0.3f; // ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏ï‡∏µ‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏•‡∏¥‡∏Å

    private bool canAttack = false;

    void Update()
    {
        // ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ã‡πâ‡∏≤‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏à‡∏°‡∏ï‡∏µ
        if (Input.GetMouseButtonDown(0))
        {
            canAttack = true;
            Debug.Log("üñ±Ô∏è ‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏µ‡πÑ‡∏î‡πâ!");
            StartCoroutine(DisableAttackAfterDelay(attackWindow));
        }
    }

    private void OnTriggerEnter(Collider other)
    {
        Debug.Log("üîç Trigger ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö: " + other.name + " | canAttack = " + canAttack);

        if (!canAttack) return;

        if (other.CompareTag("Ball"))
        {
            Debug.Log("‚úÖ ‡∏ö‡∏≠‡∏•‡πÇ‡∏î‡∏ô‡∏î‡∏≤‡∏ö‡∏Ç‡∏ì‡∏∞‡πÇ‡∏à‡∏°‡∏ï‡∏µ");

            BladeBall bladeBall = other.GetComponent<BladeBall>();
            if (bladeBall != null)
            {
                Vector3 direction = transform.parent.forward;
                bladeBall.ReflectWithDirection(direction.normalized, reflectForce);
                Debug.Log("‚öîÔ∏è ‡∏ï‡∏µ‡∏ö‡∏≠‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
            }

            canAttack = false; // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏µ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏î‡∏ô
        }
    }

    private IEnumerator DisableAttackAfterDelay(float delay)
    {
        yield return new WaitForSeconds(delay);
        canAttack = false;
        Debug.Log("üõë ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏µ (‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤)");
    }
}
